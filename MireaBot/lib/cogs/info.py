from datetime import datetime
from typing import Optional

from discord import Embed, Member
from discord.ext.commands import Cog
from discord.ext.commands import command

class Info(Cog):
	def __init__(self, bot):
		self.bot = bot

	@command(name="userinfo", aliases=["—é–∑–µ—Ä"], brief = "–£–∑–Ω–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.")
	async def user_info(self, ctx, target: Optional[Member]):
		target = target or ctx.author

		embed = Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ",
					  colour=target.colour,
					  timestamp=datetime.utcnow())

		embed.set_thumbnail(url=target.avatar_url)

		fields = [("–ò–º—è", str(target), True),
				  ("ID", target.id, True),
				  ("–í—ã—Å—à–∞—è —Ä–æ–ª—å", target.top_role.mention, True),
				  ("–°–æ—Å—Ç–æ—è–Ω–∏–µ", str(target.status).title(), True),
				  ("–°—Ç–∞—Ç—É—Å", f"{str(target.activity.type).split('.')[-1].title() if target.activity else 'N/A'} {target.activity.name if target.activity else ''}", True),
				  ("–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω", target.created_at.strftime("%d/%m/%Y %H:%M:%S"), True),
				  ("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É", target.joined_at.strftime("%d/%m/%Y %H:%M:%S"), True),
				  ("–ë—É—Å—Ç —Å–µ—Ä–≤–µ—Ä–∞", bool(target.premium_since), True)]

		for name, value, inline in fields:
			embed.add_field(name=name, value=value, inline=inline)

		await ctx.send(embed=embed)

	@command(name="serverinfo", aliases=["guildinfo", "—Å–µ—Ä–≤–µ—Ä"], brief = "–£–∑–Ω–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ—Ä–≤–µ—Ä–µ.")
	async def server_info(self, ctx):
		embed = Embed(title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ",
					  colour=ctx.guild.owner.colour,
					  timestamp=datetime.utcnow())

		embed.set_thumbnail(url=ctx.guild.icon_url)

		statuses = [len(list(filter(lambda m: str(m.status) == "–í —Å–µ—Ç–∏", ctx.guild.members))),
					len(list(filter(lambda m: str(m.status) == "–ù–µ –∞–∫—Ç–∏–≤–µ–Ω", ctx.guild.members))),
					len(list(filter(lambda m: str(m.status) == "–ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å", ctx.guild.members))),
					len(list(filter(lambda m: str(m.status) == "–ù–µ –≤ —Å–µ—Ç–∏", ctx.guild.members)))]

		fields = [("ID", ctx.guild.id, True),
				  ("–í–ª–∞–¥–µ–ª–µ—Ü", ctx.guild.owner, True),
				  ("–†–µ–≥–∏–æ–Ω", ctx.guild.region, True),
				  ("–°–æ–∑–¥–∞–Ω", ctx.guild.created_at.strftime("%d/%m/%Y %H:%M:%S"), True),
				  ("–£—á–∞—Å—Ç–Ω–∏–∫–∏", len(ctx.guild.members), True),
				  ("–õ—é–¥–∏", len(list(filter(lambda m: not m.bot, ctx.guild.members))), True),
				  ("–ë–æ—Ç—ã", len(list(filter(lambda m: m.bot, ctx.guild.members))), True),
				  ("–ó–∞–±–∞–Ω–µ–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", len(await ctx.guild.bans()), True),
				  ("–°—Ç–∞—Ç—É—Å—ã", f"üü¢ {statuses[0]} üü† {statuses[1]} üî¥ {statuses[2]} ‚ö™ {statuses[3]}", True),
				  ("–¢–µ–∫—Ç–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã", len(ctx.guild.text_channels), True),
				  ("–ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–∞–Ω–∞–ª—ã", len(ctx.guild.voice_channels), True),
				  ("–ö–∞—Ç–µ–≥–æ—Ä–∏–∏", len(ctx.guild.categories), True),
				  ("–†–æ–ª–∏", len(ctx.guild.roles), True),
				  ("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è", len(await ctx.guild.invites()), True),
				  ("\u200b", "\u200b", True)]

		for name, value, inline in fields:
			embed.add_field(name=name, value=value, inline=inline)

		await ctx.send(embed=embed)

	@Cog.listener()
	async def on_ready(self):
		if not self.bot.ready:
			self.bot.cogs_ready.ready_up("info")


def setup(bot):
	bot.add_cog(Info(bot))